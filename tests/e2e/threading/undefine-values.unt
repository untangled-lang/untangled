thread_def Child {
  receive {
    int i -> {}

    (int[3] arr, float f) -> {}

    (int i, float f) -> {
      print("Received undeclared tuple\n");
    }
    _ -> {}
  }

  receive {
    int[10] arr -> {
      print("Received undeclared array\n");
    }

    _ -> {}
  }

  receive {
    (string x, float f) -> {}

    ((int[3] arr, float f), (string s, (_, thread[5] threads))) -> {
      print("Received complex tuple\n");
    }

    _ -> {}
  }

  receive {
    ((int[3] arr, float f), (string s, (_, thread[5] threads))) -> {

    }

    (int[3], float)[10][10] arr -> {
      print("Received complex array\n");
    }

    _ -> {}
  }
}

thread_def Main {
  (int, float) tup;
  int[10] arr;
  ((int[3], float), (string, (int, thread[5]))) complex_tuple;
  (int[3], float)[10][10] complex_array;

  thread t = spawn Child;
  t << tup;
  t << arr;
  t << complex_tuple;
  t << complex_array;
}
