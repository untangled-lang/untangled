/*
 * Expects to encounter evidence of a race condition in 10,000 threads all incrementing the same
 * block of memory
*/
thread_def Incrementor {
  int[1] arr;

  receive {
    int[1] a -> arr = a;
    _ -> {}
  }

  int old_value = arr[0];             // 1. load value
  for (int i = 0; i < 10000; i++) {}  // 2. waste time
  arr[0] = old_value + 1;             // 3. increment and store value
}

thread_def Main {
  int[1] arr = [0];
  int NUM_THREADS = 10000;
  for (int i = 0; i < NUM_THREADS; i++) {
    thread t = spawn Incrementor;
    t << arr;
  }

  // If the value wasnâ€™t actually incremented to 10000 times, we are observing nondeterminism
  // because multiple threads did the load/increment/store operations at the same time
  if (arr[0] < NUM_THREADS) {
    print("Nondeterminism detected!\n");
  } else {
    print("No nondeterminism detected :(\n");
  }
}
